[General]
network = LoRaNetworkTest

# Data Collection & Simulation Parameters
**.vector-recording = true   
record-eventlog = false 
output-vectors-memory-limit = 500MiB  
repeat = 1
rng-class = "cMersenneTwister"

output-scalar-file = "results/${repetition}/scalars.sca"
output-vector-file = "results/${repetition}/vectors.vec"

# Timing Related Parameters
**.timeToFirstPacket = exponential(1000s)
**.timeToNextPacket = exponential(1000s)
**.maxTransmissionDuration = 4s
sim-time-limit = 1d
simtime-resolution = -6

# LoRa Nodes Class A Params
**.loRaNodes[*].app[0].initialLoRaCF = 433.375MHz
**.loRaNodes[*].app[0].initialLoRaBW = 125kHz  
# **.loRaNodes[*].app[0].initialLoRaTP = = <injected>
# **.loRaNodes[*].app[0].initialLoRaSF = = <injected>
**.loRaNodes[*].app[0].initialLoRaCR = 4

# Nodes Distribution (Random:)
**.numberOfNodes = 300
**.constraintAreaMaxX = 10000m
**.constraintAreaMaxY = 9000m
**.loRaNodes[*].**.initialX = uniform(0m, 10000m)
**.loRaNodes[*].**.initialY = uniform(0m, 9000m)
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false

# WLAM Application
**.loRaNodes[*].numApps = 1
**.loRaNodes[*].app[0].typename = "wlam_sensor_app"

**.loRaNodes[*].app[0].temperatureInterval = 15min
**.loRaNodes[*].app[0].humidityInterval = -1s # Send with Temperature
**.loRaNodes[*].app[0].no2Interval = 60min
**.loRaNodes[*].app[0].counterInterval = 1d
**.loRaNodes[*].app[0].intervalJitterFraction = 0.10

# Gateway Parameters
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = 5000.00m
**.loRaGW[0].**.initialY = 450.00m
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false

# PacketForwarder Configuration (simplified for testing - no network server)
**.loRaGW[*].packetForwarder.destPort = 1700
**.loRaGW[*].packetForwarder.localPort = 2000
**.loRaGW[*].packetForwarder.destAddresses = ""
**.loRaGW[*].packetForwarder.localAddress = ""

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# Pathloss Characteristics
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLoss.typename = "LoRaLogNormalShadowing"
**.LoRaMedium.pathLoss.d0 = 40m
**.LoRaMedium.pathLoss.gamma = 2.3 						# Signal power decays faster with distance → lower ranges, higher attenuation.
**.LoRaMedium.pathLoss.sigma = 5.0						# Higher sigma → more variability (fading / shadowing randomness) around the mean path loss curve.
**.LoRaMedium.backgroundNoise.power = -100dBm			# Explicit background noise

**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCache.range = 3500m 				# Since WLAM is not dense
**.LoRaMedium.neighborCache.refillPeriod = 0s			# Disabled since WLAM has static-nodes

# General
**.numberOfPacketsToSend = 0
**.minInterferenceTime = 0s
**.displayAddresses = false
**.alohaChannelModel = false
**.energyDetection = -110dBm
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

# Environment Visualization
#*.visualizer.sceneVisualizer.typename = "OpenStreetMapSceneCanvasVisualizer"
#*.visualizer.sceneVisualizer.mapFile = xmldoc("biesbosch.osm")
*.coordinateSystem.sceneLatitude = 51.7865000deg  	# maxlat from <bounds> in osm file
*.coordinateSystem.sceneLongitude = 4.7258000deg 	# minlon from <bounds> in osm file